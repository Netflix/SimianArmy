# see documentation at:
# https://github.com/Netflix/SimianArmy/wiki/Configuration

# By default Janitor Monkey wakes up every hour
simianarmy.scheduler.frequency = 1
simianarmy.scheduler.frequencyUnit = HOURS
simianarmy.scheduler.threads = 1
# Janitor Monkey runs every day at 11am.
simianarmy.calendar.openHour = 11
simianarmy.calendar.closeHour = 11
simianarmy.calendar.timezone = America/Los_Angeles

# Let Janitor Monkey run
simianarmy.janitor.enabled = true

# Don't allow Janitor Monkey to change resources (dryrun mode)
simianarmy.janitor.leashed = true

# The SDB domain for storing the resources managed by the Janitor Monkey.
simianarmy.janitor.resources.sdb.domain = SIMIAN_ARMY

# override to force monkey time, useful for debugging off hours
#simianarmy.calendar.isMonkeyTime = true

# Currently Janitor Monkey can clean up the following resources
simianarmy.janitor.enabledResources = Instance, ASG, EBS_Volume, EBS_Snapshot, Launch_Config, Image

# The property below needs to be a valid email address to send notifications for Janitor Monkey
simianarmy.janitor.notification.sourceEmail = foo@bar.com

# The property below needs to be a valid email address to receive the summary email of Janitor Monkey
# after each run
simianarmy.janitor.summaryEmail.to = foo@bar.com

# The property below needs to be a valid email address to receive the notifications of Janitor Monkey
# for resouces that do not have a valid owner email specified
simianarmy.janitor.notification.defaultEmail = foo@bar.com

# The property below specifies the number of business days that a notification is sent before the
# expected termination time. For example, if a resource is scheduled to be cleaned up by Janitor
# Monkey on 12/13/2012, Thursday and the property is set to 2, the owner will receive notification
# about the cleanup on 12/11/2012, Tuesday, which is 2 business days before the termination date.
simianarmy.janitor.notification.daysBeforeTermination = 2

# The owner id that snapshots have for being managed by Janitor Monkey. This property needs
# to set if you use Edda for getting snapshots to avoid getting shared snapshots. If you are using
# AWS to get the snapshots, this property does not need to be set.
#simianarmy.janitor.snapshots.ownerId = 012345678

# The following properties are used by the Janitor rule for cleaning up orphaned instances,
# i.e. instances that are not in an auto-scaling group.
simianarmy.janitor.rule.orphanedInstanceRule.enabled = true
# An orphaned instance is marked as cleanup candidate if it has launched for more than the number
# of days specified in the property below.
simianarmy.janitor.rule.orphanedInstanceRule.instanceAgeThreshold = 2
# The number of business days the instance is kept after a notification is sent for the termination
# when the instance has an owner.
simianarmy.janitor.rule.orphanedInstanceRule.retentionDaysWithOwner = 3
# The number of business days the instance is kept after a notification is sent for the termination
# when the instance has no owner.
simianarmy.janitor.rule.orphanedInstanceRule.retentionDaysWithoutOwner = 8

# The following properties are used by the Janitor rule for cleaning up volumes that have been
# detached from instances for certain days.
simianarmy.janitor.rule.oldDetachedVolumeRule.enabled = true
# A volume is considered a cleanup candidate after being detached for the number of days specified
# in the property below.
simianarmy.janitor.rule.oldDetachedVolumeRule.detachDaysThreshold = 30
# The number of business days the volume is kept after a notification is sent for the termination.
simianarmy.janitor.rule.oldDetachedVolumeRule.retentionDays = 7

# The following properties are used by the Janitor rule for cleaning up volumes that should have been
# deleted by AWS when the attached instance was terminated. This rule can be enabled only if Edda
# is enabled since Janitor Monkey needs to query the history of the attached instance.
simianarmy.janitor.rule.deleteOnTerminationRule.enabled = true
# The number of business days the volume is kept after a notification is sent for the termination.
simianarmy.janitor.rule.deleteOnTerminationRule.retentionDays = 3

# The following properties are used by the Janitor rule for cleaning up snapshots that have no existing
# images generated from them and launched for certain days.
simianarmy.janitor.rule.noGeneratedAMIRule.enabled = true
# A snapshot without an image is considered a cleanup candidate after launching for the number of
# days specified in the property below.
simianarmy.janitor.rule.noGeneratedAMIRule.ageThreshold = 30
# The number of business days the snapshot is kept after a notification is sent for the termination.
simianarmy.janitor.rule.noGeneratedAMIRule.retentionDays = 7

# The following properties are used by the Janitor rule for cleaning up auto-scaling groups that have
# no active instances and the launch configuration is older than certain days.
simianarmy.janitor.rule.oldEmptyASGRule.enabled = true
# An an auto-scaling group without active instances is considered a cleanup candidate when its launch
# configuration is older than the number of days specified in the property below.
simianarmy.janitor.rule.oldEmptyASGRule.launchConfigAgeThreshold = 50
# The number of business days the auto-scaling group is kept after a notification is sent for the termination.
simianarmy.janitor.rule.oldEmptyASGRule.retentionDays = 10

# The following properties are used by the Janitor rule for cleaning up auto-scaling groups that have
# no active instances and have been suspended from the associated ELB traffic for certain days.
simianarmy.janitor.rule.suspendedASGRule.enabled = true
# An auto-scaling group without active instances is considered a cleanup candidate when it has been
# suspended from the associated ELB traffic for the number of days specified in the property below.
simianarmy.janitor.rule.suspendedASGRule.suspensionAgeThreshold = 2
# The number of business days the auto-scaling group is kept after a notification is sent for the termination.
simianarmy.janitor.rule.suspendedASGRule.retentionDays = 5

# The property below specifies whether or not Eureka/Discovery is available for Janitor monkey to use.
# Discovery/Eureka is used in the rules for cleaning up auto-scaling groups to decide if an auto-scaling group
# has an 'active' instance, i.e. an instance that is registered and up in Discovery/Eureka.
simianarmy.janitor.Eureka.enabled = false

# The following properties are used by the Janitor rule for cleaning up launch configurations that are not
# used by any auto scaling group and are older than certain days.
simianarmy.janitor.rule.oldUnusedLaunchConfigRule.enabled = true
# An unused launch configuration is considered a cleanup candidate when it is older than the number of days
# specified in the property below.
simianarmy.janitor.rule.oldUnusedLaunchConfigRule.ageThreshold = 4
# The number of business days the launch configuration is kept after a notification is sent for the termination.
simianarmy.janitor.rule.oldUnusedLaunchConfigRule.retentionDays = 3

# The property below specifies the number of days to look back in the history when crawling the last reference
# information of the images.
simianarmy.janitor.image.crawler.lookBackDays = 60
# The owner id that images have for being managed by Janitor Monkey.
#simianarmy.janitor.image.ownerId = 1234567890

# The following properties are used by the Janitor rule for cleaning up images that are not
# used by any instance or launch configuration, and not used to create other images for more than certain days.
# This rule is by default disabled, you need to have Edda running and enabled for using this rule.
simianarmy.janitor.rule.unusedImageRule.enabled = false
# An unused image is considered a cleanup candidate when it is not referenced for than the number of days
# specified in the property below.
simianarmy.janitor.rule.unusedImageRule.lastReferenceDaysThreshold = 45
# The number of business days the image is kept after a notification is sent for the termination.
simianarmy.janitor.rule.unusedImageRule.retentionDays = 3

# You can enable Edda for Janitor Monkey to get better performance and accuracy. You need to start Edda first
# to be able to use it.
# simianarmy.janitor.edda.enabled = true
# The Edda endpoint in each region you need Janitor Monkey
#simianarmy.janitor.edda.endpoint.us-east-1 = http://localhost:8080

# The Edda client configurations.
# simianarmy.janitor.edda.client.timeout = 30000
# simianarmy.janitor.edda.client.retries = 3
# simianarmy.janitor.edda.client.retryInterval = 1000